---
import Link from '@components/ui/link.astro';
const { heading, subheading } = Astro.props;
---

<div class="relative isolate px-6 pt-10 lg:px-8 pb-28 rounded-lg bg-gray-800">
    <div class="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80" aria-hidden="true"></div>
    <div class="mx-auto max-w-2xl another">
        <div class="hidden sm:mb-8 sm:flex sm:justify-center">
            <div class="relative rounded-full px-3 py-1 text-sm leading-6 text-gray-600 ring-1 ring-gray-900/10 hover:ring-gray-900/20"></div>
        </div>
        <div class="text-center">
            <h1 class="text-4xl font-bold tracking-tight text-white">{heading}</h1>
            <p class="mt-2 text-lg leading-8 text-gray-300">{subheading}</p>
        </div>
        <div class="flex items-center justify-center mt-5 space-x-2 flex-wrap">
            <Link
                href="/"
                class="flex items-center px-4 py-2 bg-white-800 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-200 active:bg-gray-200 my-1"
            >
                <span class="ml-1">TikTok Video</span>
            </Link>
            <Link
                href="/tiktok-sound-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">MP3</span>
            </Link>
            <Link
                href="/tiktok-slideshow-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">Photo</span>
            </Link>
            <Link
                href="/tiktok-story-downloader"
                class="flex items-center px-8 py-2 bg-white bg-opacity-70 text-black font-semibold rounded-s shadow-md transition-colors duration-300 ease-in-out hover:bg-gray-100 hover:bg-opacity-80 active:bg-gray-200 my-1"
            >
                <span class="ml-1">Story</span>
            </Link>
        </div>

<div class="hero-form">
        <form action="/" name="formurl" method="get">
            <div class="hero-input">
                <div class="alert alert-warning" role="alert" id="alert"></div>
                <div class="progress-box">
                <div class="progress-text">Please wait a moment<div class="spinner-grow text-light" role="status"><span class="visually-hidden">Loading...</span></div>
                </div>
                <div class="progress">
                <div class="progress-bar bg-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>


        <div class="hero-input-left">
            <div class="icon-link"><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12.317 3.0441C13.598 1.76308 15.675 1.76308 16.956 3.0441C18.237 4.32511 18.237 6.40205 16.956 7.68306L13.9331 10.7059C12.6521 11.9869 10.5752 11.9869 9.29416 10.7059C9.19999 10.6117 9.11291 10.5135 9.03283 10.4118C8.81933 10.1405 8.42638 10.0937 8.15515 10.3072C7.88392 10.5207 7.83713 10.9137 8.05063 11.1849C8.1612 11.3254 8.2811 11.4606 8.41028 11.5898C10.1794 13.359 13.0478 13.359 14.817 11.5898L17.8399 8.56694C19.609 6.79777 19.609 3.92938 17.8399 2.16021C16.0707 0.391044 13.2023 0.391043 11.4331 2.16021L8.93309 4.66024C8.68902 4.90432 8.68902 5.30005 8.93309 5.54413C9.17717 5.78821 9.5729 5.78821 9.81698 5.54413L12.317 3.0441Z" fill="#C6C6D5"></path><path d="M6.06698 9.2941C7.348 8.01308 9.42493 8.01308 10.7059 9.2941C10.8002 9.38831 10.8872 9.48655 10.9673 9.58821C11.1808 9.85944 11.5737 9.90623 11.845 9.69272C12.1162 9.47922 12.163 9.08627 11.9495 8.81504C11.8389 8.67454 11.7189 8.53933 11.5898 8.41021C9.82066 6.64104 6.95227 6.64104 5.1831 8.41021L2.16025 11.4331C0.391082 13.2022 0.391082 16.0706 2.16025 17.8398C3.92942 19.609 6.79781 19.609 8.56698 17.8398L11.067 15.3398C11.3111 15.0957 11.3111 14.7 11.067 14.4559C10.8229 14.2118 10.4272 14.2118 10.1831 14.4559L7.6831 16.9559C6.40208 18.2369 4.32515 18.2369 3.04413 16.9559C1.76312 15.6749 1.76312 13.598 3.04413 12.3169L6.06698 9.2941Z" fill="#C6C6D5"></path><path d="M12.317 3.0441C13.598 1.76308 15.675 1.76308 16.956 3.0441C18.237 4.32511 18.237 6.40205 16.956 7.68306L13.9331 10.7059C12.6521 11.9869 10.5752 11.9869 9.29416 10.7059C9.19999 10.6117 9.11291 10.5135 9.03283 10.4118C8.81933 10.1405 8.42638 10.0937 8.15515 10.3072C7.88392 10.5207 7.83713 10.9137 8.05063 11.1849C8.1612 11.3254 8.2811 11.4606 8.41028 11.5898C10.1794 13.359 13.0478 13.359 14.817 11.5898L17.8399 8.56694C19.609 6.79777 19.609 3.92938 17.8399 2.16021C16.0707 0.391044 13.2023 0.391043 11.4331 2.16021L8.93309 4.66024C8.68902 4.90432 8.68902 5.30005 8.93309 5.54413C9.17717 5.78821 9.5729 5.78821 9.81698 5.54413L12.317 3.0441Z" stroke="#C6C6D5" stroke-width="0.6" stroke-linecap="round"></path><path d="M6.06698 9.2941C7.348 8.01308 9.42493 8.01308 10.7059 9.2941C10.8002 9.38831 10.8872 9.48655 10.9673 9.58821C11.1808 9.85944 11.5737 9.90623 11.845 9.69272C12.1162 9.47922 12.163 9.08627 11.9495 8.81504C11.8389 8.67454 11.7189 8.53933 11.5898 8.41021C9.82066 6.64104 6.95227 6.64104 5.1831 8.41021L2.16025 11.4331C0.391082 13.2022 0.391082 16.0706 2.16025 17.8398C3.92942 19.609 6.79781 19.609 8.56698 17.8398L11.067 15.3398C11.3111 15.0957 11.3111 14.7 11.067 14.4559C10.8229 14.2118 10.4272 14.2118 10.1831 14.4559L7.6831 16.9559C6.40208 18.2369 4.32515 18.2369 3.04413 16.9559C1.76312 15.6749 1.76312 13.598 3.04413 12.3169L6.06698 9.2941Z" stroke="#C6C6D5" stroke-width="0.6" stroke-linecap="round"></path></svg>
            </div>

        <input name="url" id="url" type="text" class="form-control" placeholder="Paste TikTok link here" required="" aria-label="Name" autocomplete="off" autocapitalize="none">
            <div class="paste"><button type="button" class="btn btn-paste"><i class="icon icon-paste"></i><span>Paste</span></button>
            </div>
        </div>
<div class="hero-input-right">
<button type="submit" class="btn btn-go flex-center"><i class="icon icon-download"></i>Download</button>
</div>
</div>
</form>
</div>



    </div>
</div>

<div class="loader items-center justify-center hidden">
    <img src="/src/icons/loader.webp" alt="" />
</div>

<div class="bg-gradient-to-br py-16 px-4 sm:px-6 lg:px-8 main-div hidden">
    <div class="max-w-7xl mx-auto">
        <h2></h2>
        <h2 class="text-2xl font-extrabold text-center mb-4 shadow-text msg break-all"></h2>
        <div class="flex flex-wrap justify-center gap-8">
            <div class="gap-8 down-div grid lg:grid-cols-2 md:grid-cols-2 grid-cols-1"></div>
        </div>
    </div>
</div>

<style>
    .shadow-text {
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }
    .flex {
        align-items: flex-start;
    }
</style>

<script type="module">
    import h from '/src/assets/js/s.js';

    let submitForm;
    let mainDiv;
    let downDiv;
    let message;
    let loader;
    let e, s, r;
    const baseURL = 'https://download.stiktokio.com';
    const errorClass = 'text-red-600';
    const simpleClass = 'text-white';
    const imageClass = 'w-full h-full object-cover rounded-lg mb-6';
    const h3Class = 'text-2xl font-semibold text-white text-center mb-4';
    const anchorClass =
        'block w-full bg-gradient-to-r from-pink-500 to-red-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-all duration-300 hover:from-pink-600 hover:to-red-600 hover:shadow-lg';

    function init() {
        // DOM elements ko dobara select karna
        submitForm = document.querySelector('.sub-form');
        mainDiv = document.querySelector('.main-div');
        downDiv = document.querySelector('.down-div');
        message = document.querySelector('.msg');
        loader = document.querySelector('.loader');

        // Submit event listener lagana
        submitForm.addEventListener('submit', dt);

        // Initial data fetch karna
        SendFirstRequestToServer();
    }

    function addPosition(data) {
        e = data.layout;
        s = data.cards;
        r = data.cards_position;
    }

    function showLoader() {
        if (loader.classList.contains('hidden')) {
            loader.classList.remove('hidden');
            loader.classList.add('flex');
        } else {
            loader.classList.add('flex');
        }
    }

    function hideLoader() {
        if (loader.classList.contains('flex')) {
            loader.classList.remove('flex');
            loader.classList.add('hidden');
        } else {
            loader.classList.add('hidden');
        }
    }

    function SendFirstRequestToServer() {
        fetch(`${baseURL}/position`, {
            method: 'get',
        })
            .then((response) => response.json())
            .then((res) => {
                addPosition(res);
            })
            .catch((err) => {
                showError(err);
            });
    }

    function showError(errorMsg) {
        if (mainDiv.classList.contains('hidden')) {
            mainDiv.classList.add('flex');
            mainDiv.classList.remove('hidden');
        }
        if (message.classList.contains(simpleClass)) {
            message.classList.remove(simpleClass);
            message.classList.add(errorClass);
        } else {
            message.classList.add(errorClass);
        }
        message.textContent = errorMsg;
    }

    function dc() {
        if (e && s && r) {
            const dc = h(e, r, s);
            if (dc) {
                return dc;
            } else {
                showError('Please reload page and try again later.');
                return false;
            }
        } else {
            showError('Please wait a few seconds.');
            return false;
        }
    }

    function showDataOnPage(data) {
        if (data.thumbnail) {
            showVideoDataOnPage(data);
        } else {
            showImageDataOnPage(data);
        }
    }

    function scrollToElement(className) {
        var element = document.querySelector(`.${className}`);
        if (element) {
            element.scrollIntoView({ behavior: 'smooth', block: 'end' });
        } else {
            console.log('Element not found');
        }
    }

    function deleteAllDownloadDivs() {
        let ddDivs = document.querySelectorAll('.ddDiv');

        if (ddDivs.length >= 1) {
            ddDivs = Array.from(ddDivs);
            for (const element of ddDivs) {
                element.remove();
            }
        }

        if (!mainDiv.classList.contains('hidden')) {
            mainDiv.classList.add('hidden');
            mainDiv.classList.remove('flex');
        }
        message.textContent = '';
    }

    function showImageDataOnPage(data) {
        mainDiv.classList.remove('hidden');
        message.classList.add(simpleClass);

        data.formats.forEach((format) => {
            if (format.type === 'image') {
                const dnDiv = document.createElement('div');
                dnDiv.className = 'bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full ddDiv';

                const dnButtonDiv = document.createElement('div');
                const dnButton = document.createElement('a');
                dnButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

                const img = document.createElement('img');
                img.className = 'h-auto object-cover rounded-lg mb-6 w-full max-h-[400px]';
                img.alt = data.title;
                img.src = format.imgURL;

                dnButton.innerText = 'Download Photo';
                dnButton.href = `${baseURL}${format.link}`;
                dnButton.target = '_blank';

                dnDiv.appendChild(img);
                dnButtonDiv.append(dnButton);
                dnDiv.append(dnButtonDiv);
                downDiv.appendChild(dnDiv);
            } else if (format.type == 'audio') {
                const dnDiv = document.createElement('div');
                dnDiv.className = `bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full ddDiv block order-2 lg:col-span-${data.formats.length - 1} md:col-span-2 col-span-1`;

                const dnButton = document.createElement('a');
                dnButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

                dnButton.innerText = 'Download MP3';
                dnButton.href = `${baseURL}${format.link}`;
                dnButton.target = '_blank';

                dnDiv.append(dnButton);
                downDiv.appendChild(dnDiv);

                const anotherButton = document.createElement('button');
                anotherButton.className =
                    'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';
                anotherButton.textContent = 'Download Another';
                anotherButton.addEventListener('click', () => {
                    document.querySelector('.another').scrollIntoView({ behavior: 'smooth' });
                });

                dnDiv.appendChild(anotherButton);
            }
        });
    }

    function showVideoDataOnPage(data) {
        const dnDiv = document.createElement('div');
        const dnButtonDiv = document.createElement('div');
        const thumbnail = document.createElement('img');
        dnDiv.className = 'bg-gray-800 rounded-xl shadow-2xl overflow-hidden transform transition-all duration-300 w-full w-96 md:w-[650px] md:flex p-4 ddDiv gap-5 col-span-2';
        thumbnail.className = 'block mb-6 md:mb-0 rounded-lg md:w-[50%] md:h-[345px]';

        if (mainDiv.classList.contains('hidden')) {
            mainDiv.classList.remove('hidden');
            mainDiv.classList.add('flex');
        } else {
            mainDiv.classList.add('flex');
        }
        if (!message.classList.contains(simpleClass)) {
            message.classList.add(simpleClass);
        }
        message.textContent = data.title;
        thumbnail.alt = data.title;
        thumbnail.src = data.thumbnail;

        downDiv.appendChild(dnDiv);
        dnDiv.appendChild(thumbnail);
        dnDiv.appendChild(dnButtonDiv);

        for (let format of data.formats) {
            const dnButton = document.createElement('a');
            dnButton.className = 'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';

            if (!format.hd && !format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download without watermark';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (format.hd && !format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download without watermark (HD)';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (format.hd && format.watermark && format.type === 'video') {
                dnButton.innerText = 'Download watermark';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            } else if (!format.hd && !format.watermark && format.type === 'audio') {
                dnButton.innerText = 'Download MP3';
                dnButton.href = `${baseURL}${format.link}`;
                dnButtonDiv.append(dnButton);
                dnButton.target = '_blank';
            }
        }
        const anotherButton = document.createElement('button');
        anotherButton.className =
            'block w-full bg-gradient-to-r from-pink-500 to-purple-500 text-white font-bold py-3 px-4 rounded-lg text-center transition-colors duration-300 hover:opacity-90 my-3';
        anotherButton.textContent = 'Download Another';
        anotherButton.addEventListener('click', () => {
            document.querySelector('.another').scrollIntoView({ behavior: 'smooth' });
        });

        dnButtonDiv.appendChild(anotherButton);

        scrollToElement('main-div');
    }

    function dt(e) {
        e.preventDefault();
        const url = document.querySelector('.down-url').value;

        const enc = dc();
        if (!enc) {
            scrollToElement('main-div');
            return;
        }

        deleteAllDownloadDivs();
        showLoader();

        fetch(`${baseURL}/download`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'x-auth-token': enc,
            },
            body: JSON.stringify({ url: url }),
        })
            .then((res) => res.json())
            .then((response) => {
                if (response.error && response.ex) {
                    window.location.reload();
                }
                if (response.error) {
                    showError(response.msg);
                }
                if (!response.error) {
                    showDataOnPage(response);
                    scrollToElement('main-div');
                }
            })
            .catch((err) => {
                showError(err);
            })
            .finally(() => {
                hideLoader();
            });
    }

    // Clean-up function
    function cleanup() {
        if (submitForm) {
            submitForm.removeEventListener('submit', dt);
        }
    }

    // Initialize on first load
    document.addEventListener('DOMContentLoaded', init);

    // Cleanup before Astro page swap
    document.addEventListener(
        'astro:before-swap',
        () => {
            cleanup();
        },
        { once: true }
    );

    // Re-initialize after swapping pages
    document.addEventListener('astro:after-swap', init);
</script>
